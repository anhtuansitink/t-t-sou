local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Fast Attack",
   LoadingTitle = "Blox Fruit",
   LoadingSubtitle = "by Tuan",
   Theme = "Default",
   ToggleUIKeybind = Enum.KeyCode.K, 
   DisableRayfieldPrompts = true,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   KeySystem = false,
})

local Tab = Window:CreateTab("Fast Attack")

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local connection = nil

local Settings = {
    AutoClick = false,
    ClickDelay = 0,
}

local function SafeWaitForChild(parent, childName)
    local success, result = pcall(function()
        return parent:WaitForChild(childName)
    end)
    if not success or not result then
        warn("Không tìm thấy: " .. childName)
    end
    return result
end

-- Định nghĩa FastAttack table và các method
local remote, idremote
for _, v in next, ({game.ReplicatedStorage.Util, game.ReplicatedStorage.Common, game.ReplicatedStorage.Remotes, game.ReplicatedStorage.Assets, game.ReplicatedStorage.FX}) do
    for _, n in next, v:GetChildren() do
        if n:IsA("RemoteEvent") and n:GetAttribute("Id") then
            remote, idremote = n, n:GetAttribute("Id")
        end
    end
    v.ChildAdded:Connect(function(n)
        if n:IsA("RemoteEvent") and n:GetAttribute("Id") then
            remote, idremote = n, n:GetAttribute("Id")
        end
    end)
end
task.spawn(function()
    while task.wait(0.05) do
        local char = game.Players.LocalPlayer.Character
        local root = char and char:FindFirstChild("HumanoidRootPart")
        local parts = {}
        for _, x in ipairs({workspace.Enemies, workspace.Characters}) do
            for _, v in ipairs(x and x:GetChildren() or {}) do
                local hrp = v:FindFirstChild("HumanoidRootPart")
                local hum = v:FindFirstChild("Humanoid")
                if v ~= char and hrp and hum and hum.Health > 0 and (hrp.Position - root.Position).Magnitude <= 60 then
                    for _, _v in ipairs(v:GetChildren()) do
                        if _v:IsA("BasePart") and (hrp.Position - root.Position).Magnitude <= 60 then
                            parts[#parts+1] = {v, _v}
                        end
                    end
                end
            end
        end
        local tool = char:FindFirstChildOfClass("Tool")
        if #parts > 0 and tool and (tool:GetAttribute("WeaponType") == "Melee" or tool:GetAttribute("WeaponType") == "Sword") then
            pcall(function()
                require(game.ReplicatedStorage.Modules.Net):RemoteEvent("RegisterHit", true)
                game.ReplicatedStorage.Modules.Net["RE/RegisterAttack"]:FireServer()
                local head = parts[1][1]:FindFirstChild("Head")
                if not head then return end
                game.ReplicatedStorage.Modules.Net["RE/RegisterHit"]:FireServer(head, parts, {}, tostring(game.Players.LocalPlayer.UserId):sub(2, 4) .. tostring(coroutine.running()):sub(11, 15))
                cloneref(remote):FireServer(string.gsub("RE/RegisterHit", ".", function(c)
                    return string.char(bit32.bxor(string.byte(c), math.floor(workspace:GetServerTimeNow() / 10 % 10) + 1))
                end),
                bit32.bxor(idremote + 909090, game.ReplicatedStorage.Modules.Net.seed:InvokeServer() * 2), head, parts)
            end)
        end
    end
end)

-- Slider điều chỉnh ClickDelay
local ClickDelaySlider = Tab:CreateSlider({
    Name = "Click Delay (s)",
    Range = {0.01, 1},
    Increment = 0.01,
    Suffix = "s",
    CurrentValue = Settings.ClickDelay,
    Callback = function(value)
        Settings.ClickDelay = value
    end
})

-- Toggle bật/tắt FastAttack
local FastAttackToggle = Tab:CreateToggle({
    Name = "Fast Attack",
    CurrentValue = false,
    Callback = function(isEnabled)
        Settings.AutoClick = isEnabled

        if isEnabled then
            if connection then return end
            connection = task.spawn(function()
                while Settings.AutoClick do
                    pcall(function()
                        FastAttack:BladeHits()
                    end)
                    task.wait(Settings.ClickDelay)
                end
                connection = nil
            end)
        else
            Settings.AutoClick = false
            connection = nil
        end
    end
})

-- Toggle Attack Mobs
Tab:CreateToggle({
    Name = "Attack Mobs",
    CurrentValue = FastAttack.attackMobs,
    Callback = function(value)
        FastAttack.attackMobs = value
    end
})

-- Toggle Attack Players
Tab:CreateToggle({
    Name = "Attack Players",
    CurrentValue = FastAttack.attackPlayers,
    Callback = function(value)
        FastAttack.attackPlayers = value
    end
})
